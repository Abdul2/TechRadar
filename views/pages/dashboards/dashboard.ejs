<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">

    <% include ../../partials/head.ejs %>

</head>

<body>

<% include ../../partials/menu.ejs %>

<div tabindex="-1" id="content" class="site-header">
    <div class="container">
        <row>
            <div class="col-md-8">
                <h1>Dashboard</h1>
            </div>
        </row>
    </div>
</div>

<div class="container bs-docs-container">

    <div class="col-md-12">
        <ol class="breadcrumb" style="margin-top: 10px;">
            <li><a href="/">Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </div>

    <div class="row">
        <div class="col-md-5 col-md-offset-1" height="300">
            <canvas id="userChart" height="150"></canvas>
        </div>
        <div class="col-md-5" height="300">
            <canvas id="commentsChart" height="150"></canvas>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <canvas id="barChart" height="150"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <canvas id="barChart2" height="150"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <canvas id="usersOfTechnology" height="150"></canvas>
        </div>
    </div>

</div>

<% include ../../partials/footer.ejs %>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.bundle.min.js"></script>

<script>


    $.get('/api/dash/votes/month', function (result) {

        var labels = [];
        var data = [];
        result.forEach(function (item) {
            labels.push(item.name);
            data.push(item.total);
        });

        var statusVoteElement = document.getElementById("barChart");
        var statusVoteChart = new Chart(statusVoteElement, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: '# of Votes',
                    data: data
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Votes for status change in last 3 months'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            stepSize: 1
                        }
                    }]
                }
            }
        });
    });

    $.get('/api/dash/technology/project', function (result) {
        var labels = [];
        var data = [];
        result.forEach(function (item) {
            labels.push(item.name);
            data.push(item.total);
        });

        var barCtx2 = document.getElementById("barChart2");
        var myBarChart2 = new Chart(barCtx2, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: '# of uses',
                    data: data
                }]
            },
            options: {
                onClick: function (evt) {
                    var segment = myBarChart2.getElementsAtEvent(evt);
                    console.log(segment);
                },
                title: {
                    display: true,
                    text: 'Technologies used in the most projects'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            stepSize: 1
                        }
                    }]
                }
            }
        });
    });

    $.get('/api/dash/votes/users', function (result) {

        var labels = [];
        var data = [];
        result.forEach(function (item) {
            labels.push(item.username);
            data.push(item.total);
        });

        var userChartElement = document.getElementById("userChart");
        var userChart = new Chart(userChartElement, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: '# of Votes',
                    data: data
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Top 10 voting users'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            stepSize: 5
                        }
                    }]
                }
            }
        });
    });



    $.get('/api/dash/technology/comments', function (result) {

        var labels = [];
        var data = [];
        result.forEach(function (item) {
            labels.push(item.technology);
            data.push(item.total);
        });

        var commentChartElement = document.getElementById("commentsChart");
        var commentChart = new Chart(commentChartElement, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: '# of Comments',
                    data: data
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Top 10 Technologies with comments'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            min: 0,
                            stepSize: 5
                        }
                    }]
                }
            }
        });
    });

    $.get('/api/dash/technology/usersCount?limit=99', function (apiData) {
        var ctx = document.getElementById("usersOfTechnology");
        var usersCount = apiData.map(function(value, index){
            return value.count;
        });
        var techNames = apiData.map(function(value, index){
            return value.name;
        });
        var colors = {
            TBD: 'rgba(100, 100, 100, 0.2)', 
            Adopt: 'rgba(0, 255, 0, 0.2)',
            Trial: 'rgba(0, 0, 200, 0.2)',
            Discuss: 'rgba(200, 200, 0, 0.2)',
            Avoid: 'rgba(255, 0, 0, 0.2)',
            Unknown: 'rgba(0, 0, 0, 0.2)'
        };
        var statusColors = apiData.map(function(value, index){
            switch(value.status_id){
                case 0: return colors.TBD; 
                case 1: return colors.Adopt;
                case 2: return colors.Trial;
                case 3: return colors.Discuss;
                case 4: return colors.Avoid;
                default: return colors.Unknown;
            }
        });
        var statusBorderColors = statusColors.map(function(value, index){
            return value.replace('0.2', '1.0'); // gets rid of transparency
        });
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: techNames,      
                datasets: [{
                    label: 'Users',
                    data: usersCount,
                    backgroundColor: statusColors,
                    borderColor: statusBorderColors,
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'Technologies used by the most people'
                },
                legend: {
                display: true,
                labels: {
                    generateLabels: function(){
                        return [
                        {text: 'TBD', fillStyle: colors.TBD}, 
                        {text: 'Adopt', fillStyle: colors.Adopt},
                        {text: 'Trial', fillStyle: colors.Trial},
                        {text: 'Discuss', fillStyle: colors.Discuss},
                        {text: 'Avoid', fillStyle: colors.Avoid},
                        ];
                    }
                }
                },
            scales: {
                yAxes: [{
                ticks: {
                    beginAtZero:true,
                }
                }]
            }
            }
        });
    });
</script>

</body>
</html>
